---
export interface CardProjectProps {
  title: string;
  role: string;
  description: string;
  technologies: string[];
  image: string;
  link: string;
  color?: string;
  linkText?: string;
}

interface Props extends CardProjectProps {}

const { title, description, technologies, image, link, role, color, linkText } = Astro.props;
---

<article class="project-card">
  <div class="project-card--container">
    <div class="project-card--front">
      <div class="project-card--front-image" style={`background-color: ${color}`}>
        <img src={image} alt={title} />
      </div>
      <div class="project-card--front-content">
        <p class="project-card--front-content-title">{title}</p>
        <a class="project-card--front-content-link" href={link} target="_blank">{linkText}</a>
      </div>
    </div>
    <div class="project-card--back">
      <div class="project-card--back-title">{role}</div>
      <div class="project-card--back-description">
        {description}
      </div>
      <div class="project-card--back-technologies">
        {technologies.map((technology) => <span>{technology}</span>)}
      </div>
    </div>
  </div>
</article>
<style>
  .project-card {
    display: block;
    cursor: pointer;
    width: 270px;
    min-height: 370px;
    font-family: 'JetBrains Mono', monospace;
    transition: all 0.3s ease-in-out;
    perspective: 1000px;
    position: relative;
    .project-card--container {
      position: relative;
      width: 100%;
      height: 100%;
      transform-style: preserve-3d;
      transition: transform 0.6s ease-in-out;
      &:hover {
        transform: rotateY(180deg);
      }

      .project-card--front,
      .project-card--back {
        position: absolute;
        width: 100%;
        height: 100%;
        backface-visibility: hidden; /* Oculta la cara trasera cuando no est√° de frente */
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2rem;
        flex-direction: column;
      }

      .project-card--front {
        border: 1px solid #212830;
        box-shadow: 0px 8px 6px -6px rgba(235, 234, 242, 0.58);
        .project-card--front-image {
          height: 100%;
          background-color: #212830;
          padding: 20px;
          width: 100%;
          display: flex;
          align-items: center;
          justify-content: center;
          img {
            width: 150px;
            height: auto;
            object-fit: contain;
          }
        }
        .project-card--front-content {
          padding: 20px;

          .project-card--front-content-title {
            text-align: center;
            font-size: 18px;
            font-weight: 600;
          }
          .project-card--front-content-link {
            text-align: center;
            font-size: 12px;
            color: #222;
          }
        }
      }
      .project-card--back {
        border: 1px solid #222;
        padding: 20px;
        display: flex;
        flex-direction: column;
        transform: rotateY(180deg);
        align-items: flex-start;
        gap: 10px;
        .project-card--back-title {
          text-align: left;
          font-size: 16px;
          font-weight: 600;
        }
        .project-card--back-description {
          text-align: left;
          font-size: 12px;
          color: #666;
          padding-bottom: 10px;
        }
        .project-card--back-technologies {
          display: flex;
          gap: 10px;
          flex-wrap: wrap;
          span {
            font-size: 11px;
            border: 1px solid black;
            padding: 2px 4px;
          }
        }
      }
    }
  }
</style>
<script>
  const projectCard = document.querySelectorAll('.project-card');

  projectCard.forEach((card) => {
    card.addEventListener('click', () => {
      const link = card.querySelector('.project-card--front-content-link') as HTMLAnchorElement;
      if (link) {
        window.open(link.href, '_blank');
      }
    });
  });
</script>
