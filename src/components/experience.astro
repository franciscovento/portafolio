---
import ExperienceCard, {
  type ExperienceCardProps,
  type ExperienceCardSeniority,
  type ExperienceCardType,
} from './cards/ExperienceCard.astro';

const experience: ExperienceCardProps[] = [
  {
    company: 'Ego Design',
    companyLink: 'https://www.egodesign.io/',
    companyLogo:
      'https://cdn.prod.website-files.com/683daefd5b2d513282a547b6/683dcf4e3993e2483a84ce7e_Untitled%20design.png',
    dates: 'from Ago 24 to Jun 25',
    position: 'Frontend Developer',

    items: [
      'Developed and maintained frontend architecture using Next.js and TypeScript,ensuring scalability and code consistency.',
      'Integrated REST APIs with React, enabling real-time data updatesand a smoother user experience.',
      'Collaborated with designers and backend developers to deliver pixel-perfect UIsaligned with Figma prototypes.',
    ],
    type: 'full-time' as ExperienceCardType,
    seniority: 'semi senior' as ExperienceCardSeniority,
    technologies: [
      'Next JS',
      'React',
      'Zustand',
      'Cypress',
      'Git',
      'GitHub',
      'React Query',
      'Tailwind',
      'Wagtail',
      'Webflow',
      'Bruno',
    ],
    color: 'black',
  },
  {
    company: 'Academlo',
    companyLink: 'https://academlo.com',
    companyLogo:
      'https://cdn.prod.website-files.com/683daefd5b2d513282a547b6/683dcc87e381f2b57b295447_academlo_logo.jpeg',
    dates: 'from apr 22 to jan 24',
    position: 'Frontend Developer',

    items: [
      'Refactored legacy codebase into reusable React components, decreasing development time for new features by 30%.',
      'Implemented dynamic UI elements using React and Tailwind CSS, enhancing usability across mobile and desktop platforms.',
      'Worked in Agile teams using tools like Jira and GitHub Projects to ensure on-time delivery of frontend features.',
    ],
    type: 'full-time' as ExperienceCardType,
    seniority: 'semi senior' as ExperienceCardSeniority,
    technologies: [
      'HTML',
      'CSS',
      'JavaScript',
      'React',
      'Tailwind',
      'Jira',
      'PostgreSQL',
      'Git',
      'Bitbucket',
      'Figma',
      'Postman',
    ],
    color: 'blue',
  },
  {
    company: 'Malcolm',
    companyLink: 'https://agenciamalcolm.pe/',
    companyLogo:
      'https://cdn.prod.website-files.com/683daefd5b2d513282a547b6/683dcd8586cf777ea21b4006_jc-logo-p-500.webp',
    dates: 'from ago 21 to apr 22',
    position: 'Frontend Developer',

    items: [
      'Writing automated tests using tools like Jest and React Testing Library, ensuring code quality and reducing production bugs.',
      'Performance optimization in web applications to improve load times and enhance user experience.',
      'Worked in Agile teams using tools like Jira and GitHub Projects to ensure on-time delivery of frontend features.',
    ],
    type: 'full-time' as ExperienceCardType,
    seniority: 'junior' as ExperienceCardSeniority,
    technologies: [
      'HTML',
      'CSS',
      'Pug',
      'Git',
      'Wordpress',
      'Figma',
      'JavaScript',
      'React',
      'Tailwind',
    ],
    color: 'purple',
  },
  {
    company: 'Tomategr√°fico',
    companyLink: 'https://tomategrafico.com/',
    companyLogo:
      'https://cdn.prod.website-files.com/683daefd5b2d513282a547b6/683ddbea9c6c08ba1ecd1696_Untitled%20design%20(1)%20(1).png',
    dates: 'from jan 21 to ago 21',
    position: 'Frontend Developer',

    items: [
      'Using HTML and CSS, I styled and structured content, optimized layouts for different devices, and implemented custom design tweaks as needed.',
      'I collaborated with designers using Figma to translate UI mockups into pixel-perfect web pages, ensuring consistency and a smooth user experience.',
      'Using HTML and CSS, I styled and structured content, optimized layouts for different devices, and implemented custom design tweaks as needed.',
    ],
    type: 'full-time' as ExperienceCardType,
    seniority: 'intern' as ExperienceCardSeniority,
    technologies: ['HTML', 'CSS', 'Wordpress', 'Elementor', 'Jira'],
    color: 'red',
  },
];

// Generate a unique ID for this instance
const uniqueId = Math.random().toString(36).substring(2, 9);
---

<section class="experience" data-experience-id={uniqueId}>
  <div class="app-wrapper">
    <div class="experience__container">
      <div class="experience__content">
        <p>
          I've worked with a variety of companies and projects, from small startups to large
          enterprises.
        </p>
      </div>

      <div class="experience__cards">
        {
          experience.reverse().map((item) => (
            <div class="experience-item" data-color={item.color}>
              <ExperienceCard
                company={item.company}
                companyLink={item.companyLink}
                companyLogo={item.companyLogo}
                dates={item.dates}
                position={item.position}
                items={item.items}
                type={item.type}
                seniority={item.seniority}
                technologies={item.technologies}
                color={item.color}
              />
            </div>
          ))
        }
      </div>
    </div>
  </div>
</section>

<style>
  .experience {
    background-color: #222;
    padding: 100px 0;

    .experience__container {
      display: grid;
      grid-template-columns: 1fr;
      gap: 2rem;
      position: relative;

      .experience__content {
        padding: 0;
        font-size: 40px;
        color: white;
        position: sticky;
        top: 0;
        height: fit-content;
        order: 2;
      }

      .experience__cards {
        position: relative;
        width: 100%;
        height: 80vh; /* Reduced height for mobile */
        overflow: hidden;
        order: 1;

        .experience-item {
          position: absolute;
          inset: 0;
          width: 100%;
          height: 100%;
          display: flex;
          justify-content: center;
          align-items: center;
          backface-visibility: hidden;
          transform-style: preserve-3d;
          will-change: transform;
          padding: 1rem;
        }
      }
    }

    .experience-item:not(:first-child) {
      transform: translateX(100%);
      opacity: 0;
    }

    @media (min-width: 768px) {
      .experience__container {
        grid-template-columns: 1fr 1fr;

        .experience__content {
          order: 1;
          padding: 25vh 0;
          font-size: 70px;
        }

        .experience__cards {
          order: 2;
          height: 100vh; /* Full height for desktop */
        }
      }
    }
  }
</style>

<script>
  import gsap from 'gsap';
  import { ScrollTrigger } from 'gsap/ScrollTrigger';

  gsap.registerPlugin(ScrollTrigger);

  // Initialize each experience section separately
  document.querySelectorAll('.experience').forEach((section) => {
    const experienceId = section.getAttribute('data-experience-id');
    const items = gsap.utils.toArray(
      `[data-experience-id="${experienceId}"] .experience-item`
    ) as HTMLElement[];

    // Check if we're on mobile
    const isMobile = window.innerWidth < 768;

    // Create a timeline for the cards animation
    const tl = gsap.timeline({
      defaults: {
        ease: 'back.out(1.2)',
        scrollTrigger: {
          trigger: `[data-experience-id="${experienceId}"] .experience__container`,
          pin: `[data-experience-id="${experienceId}"] .experience__cards`,
          start: isMobile ? 'top 20%' : 'top top',
          end: `+=${items.length * (isMobile ? 30 : 50)}%`,
          scrub: isMobile ? 1 : 3,
        },
      },
    });

    // Animate items to different positions
    tl.to(items.slice(1), {
      x: (index) => `${(index + 1) * (isMobile ? 1 : 2)}%`,
      rotate: isMobile ? -1 : -2,
      opacity: 1,
      stagger: isMobile ? 0.3 : 0.5,
    });

    // Update on resize
    window.addEventListener('resize', () => {
      const newIsMobile = window.innerWidth < 768;
      if (newIsMobile !== isMobile) {
        // Refresh ScrollTrigger on breakpoint change
        ScrollTrigger.refresh();
      }
    });
  });
</script>
